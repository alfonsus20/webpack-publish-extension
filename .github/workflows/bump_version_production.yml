name: "Bump Version Extension Production"

on:
  workflow_dispatch:
    inputs:
      bump-type:
        description: "Version bump type (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-extension:
    runs-on: ubuntu-latest
    environment:
      name: production
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Fetch all tags
        run: git fetch --tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Bump Version in manifest-prod.json
        run: node scripts/bumpManifestVersion.js ${{ github.event.inputs.bump-type }} production

      - name: Build extension
        run: yarn build

      - name: Add Version Bump Changes
        run: git add public/manifest-prod.json

      - name: Add and Commit Version Bump
        uses: qoomon/actions--create-commit@v1.2.1
        id: commit-version-bump
        with:
          message: "chore: bump version in manifest-prod.json to ${{ github.event.inputs.bump-type }}"
          skip-empty: true

      - name: Push changes
        run: git push origin main

      - name: Store Current Tag
        run: |
          VERSION=$(node -pe "require('./public/manifest-prod.json').version")
          TAG="v${VERSION}"
          echo "CURRENT_TAG=$TAG" >> $GITHUB_ENV

      - name: Create Git Tag
        uses: qoomon/actions--create-tag@v1
        with:
          name: ${{ env.CURRENT_TAG }}

      - name: Push changes
        run: git push origin ${{ env.CURRENT_TAG }}

      - name: Generate Changelog
        run: |
          npx auto-changelog --ignore-commit-pattern "chore: update CHANGELOG for version" --output changelog/CHANGELOG.md

      - name: Add Changelog
        run: git add changelog/CHANGELOG.md

      - name: Commit Changelog
        uses: qoomon/actions--create-commit@v1.2.1
        id: commit-changelog
        with:
          message: "chore: update changelog for ${{ env.CURRENT_TAG }}"
          skip-empty: true

      - name: Push Changes for Changelog
        run: git push origin main

      - name: Create GitHub Release
        run: |
          npx auto-changelog --template changelog/templates/changelog-production-template.hbs --output current-release-notes.md --starting-version="${{ env.CURRENT_TAG }}" --ignore-commit-pattern "chore: update CHANGELOG for version ${{ env.CURRENT_TAG }}"
          gh release create "${{ env.CURRENT_TAG }}" --title "Release ${{ env.CURRENT_TAG }}" --notes-file current-release-notes.md
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
