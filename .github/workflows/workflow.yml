name: "Publish Webpack Chrome Extension Production"

on:
  workflow_dispatch:
    inputs:
      bump-type:
        description: "Version bump type (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      publish:
        description: "Publish the extension to the Chrome Web Store"
        required: false
        default: "false"
        type: choice
        options:
          - true
          - false

jobs:
  build-extension:
    runs-on: ubuntu-latest
    environment:
      name: production
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: yarn install

      - name: Bump Version in manifest.json
        run: node scripts/bumpManifestVersion.js ${{ github.event.inputs.bump-type }}
      - name: Commit and Push Changes
        run: |
          git add public/manifest.json
          git commit -m "chore: bump version in manifest.json to ${{ github.event.inputs.bump-type }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build extension
        run: yarn build

      - name: Zip production extension
        run: zip -r extension-production.zip dist

      - name: Upload & release
        if: ${{ github.event.inputs.publish == 'true' }}
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: extension-production.zip
          extension-id: kaolbiekdhlpjinfpgacadmkhiahkhne
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}

      - name: Create Git Tag
        run: |
          VERSION=$(node -pe "require('./public/manifest.json').version")
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Generate Changelog
        run: |
          VERSION=$(node -pe "require('./public/manifest.json').version")
          npx auto-changelog
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG for version $VERSION"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
